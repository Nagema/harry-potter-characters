{"ast":null,"code":"import _objectSpread from \"/Users/angelica/Desktop/harry-potter-characters/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/angelica/Desktop/harry-potter-characters/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport CharactersDetails from './components/CharactersDetails';\nimport { fetchCharacters } from './services/CharactersFetch';\nimport { Switch, Route } from 'react-router-dom';\nimport FilterCharacter from './components/FilterCharacter';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: [],\n      searchText: '',\n      selectedHouse: 'all'\n    };\n    this.handleFilterName = this.handleFilterName.bind(this);\n    this.handleSelected = this.handleSelected.bind(this);\n  }\n\n  componentDidMount() {\n    this.FetchAllCharacters();\n  }\n\n  FetchAllCharacters() {\n    fetchCharacters().then(data => {\n      const newData = data.map((item, index) => {\n        return _objectSpread({}, item, {\n          id: \"\".concat(item.name, \"-\").concat(index)\n        });\n      });\n      this.setState({\n        characters: newData\n      });\n    });\n  }\n\n  handleFilterName(event) {\n    const filterName = event.currentTarget.value;\n    this.setState({\n      searchText: filterName\n    });\n  }\n\n  handleSelected(event) {\n    const selectHouse = event.currentTarget.value;\n    this.setState({\n      selectedHouse: selectHouse\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          characters = _this$state.characters,\n          searchText = _this$state.searchText,\n          selectedHouse = _this$state.selectedHouse;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(FilterCharacter, {\n        characters: characters,\n        filterCharacter: searchText,\n        handleFilterName: this.handleFilterName,\n        selectedHouse: selectedHouse,\n        handleSelected: this.handleSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Home, {\n        characters: characters,\n        selectedHouse: selectedHouse,\n        searchText: searchText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/detail/:id\",\n      render: selectData => React.createElement(CharactersDetails, {\n        characterId: selectData.match.params.id,\n        characters: characters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/angelica/Desktop/harry-potter-characters/src/App.js"],"names":["React","Home","CharactersDetails","fetchCharacters","Switch","Route","FilterCharacter","App","Component","constructor","props","state","characters","searchText","selectedHouse","handleFilterName","bind","handleSelected","componentDidMount","FetchAllCharacters","then","data","newData","map","item","index","id","name","setState","event","filterName","currentTarget","value","selectHouse","render","selectData","match","params"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport CharactersDetails from './components/CharactersDetails'\nimport { fetchCharacters } from './services/CharactersFetch';\nimport { Switch, Route } from 'react-router-dom';\nimport FilterCharacter from './components/FilterCharacter';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: [],\n      searchText: '',\n      selectedHouse: 'all',\n    };\n    this.handleFilterName = this.handleFilterName.bind(this);\n    this.handleSelected = this.handleSelected.bind(this);\n  }\n  componentDidMount() {\n    this.FetchAllCharacters();\n  }\n  FetchAllCharacters() {\n    fetchCharacters()\n      .then(data => {\n        const newData = data.map((item, index) => {\n          return { ...item, id: `${item.name}-${index}` };\n        });\n        this.setState({\n          characters: newData\n        });\n      });\n  }\n\n  handleFilterName(event) {\n    const filterName = event.currentTarget.value;\n    this.setState({\n      searchText: filterName\n    })\n  }\n  handleSelected(event) {\n    const selectHouse = event.currentTarget.value;\n    this.setState({\n      selectedHouse: selectHouse\n    })\n  }\n  render() {\n    const { characters, searchText, selectedHouse } = this.state;\n    return (\n      <div className=\"App\" >\n        <Switch>\n          <Route exact path=\"/\" render={() =>\n            <React.Fragment>\n              <FilterCharacter\n                characters={characters}\n                filterCharacter={searchText}\n                handleFilterName={this.handleFilterName}\n                selectedHouse={selectedHouse}\n                handleSelected={this.handleSelected}\n\n              />\n              <Home\n                characters={characters}\n                selectedHouse={selectedHouse}\n                searchText={searchText}\n\n              />\n            </React.Fragment>\n          }\n          />\n          <Route path=\"/detail/:id\" render={(selectData) =>\n            <CharactersDetails\n              characterId={selectData.match.params.id}\n              characters={characters}\n            />\n          } />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}